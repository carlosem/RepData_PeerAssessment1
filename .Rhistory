hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(median(ppm), col = "magenta", lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
kjlhj
faithful
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
swirl()
library(swirl)
srirl()
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- collorRam(c("red", "blue"))
pal <- collorRamp(c("red", "blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
colorRampPalette(c("red", "yellow"))
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x, y, pch = )
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
?qplot()
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2movies)
library(ggplot2)
library(ggplot2movies)
swril()
library(swril)
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, color = drv, data = mpg)
qplot(displ, hwy, color = drv, data = mpg, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(size = 2, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g <- g + geom_line()
g + geom_line()
g + ylim(-3, 3)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() facet_grid(drv~cyl, margins = TRUE)
g + geom_point() facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "High Mileage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway
| Mileage",title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut
)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), set("lm"))
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
rm(list=ls())
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", purple), pch = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1]%*%svd1$v[,1]*svd1$d
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
rm(list = ls())
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
print(cran)
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
count <- n()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
rm(list = ls())
library(swril)
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
?extract_numeric
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
?bind_rows
packageVersion('dplyr')
bind_rows(passed, failed)
sat
?select
?separate
submit()
?group_by
submit()
install.packages("installr")
setInternet2(TRUE)
installr::updateR()
install.packages("ggplot2", dependencies = TRUE)
library("ggplot2")
rm(list=ls(all=TRUE))
setwd("~/Data Science - Johns Hopkins University - COURSERA/5 - Reproducible Research/week2")
library(Rcpp)
library("Rcpp")
install.packages("Rcpp", dependencies = TRUE)
library("Rcpp")
setwd("~/Data Science - Johns Hopkins University - COURSERA/5 - Reproducible Research/week2/RepData_PeerAssessment1")
?read.csv
activity <- read.csv(file = "activity.csv", header = TRUE)
head(activity)
summary(activity)
str(activity)
aggregate(steps~date, activity, mean)
ag <- aggregate(steps~date, activity, mean)
class(ag)
?histogram
library(lattice)
?histogram
histogram(~steps | date, data = ag)
histogram(steps, data = ag)
histogram(~steps, data = ag)
?hist
hist(ag$steps)
?plot
with(ag, plot(steps~data))
with(ag, plot(steps~date))
?hist
with(ag, plot(steps, break = date))
with(ag, plot(steps, breaks = date))
with(ag, hist(steps))
str(ag)
?hist
ag[,1] <- as.character(ag[,1])
head(ag)
tail(ag)
with(ag, hist(steps, xlim = c("2012-10-02", "2012-11-29")))
with(ag, hist(steps~date))
library(ggplot2)
?ggplot
ggplot(ag, aes(date, steps)) + geom_histogram()
ggplot(ag, aes(date)) + geom_histogram()
ggplot(ag, aes(steps)) + geom_histogram()
?geom_histogram
ggplot(ag, aes(steps)) + geom_histogram(binwidth = 53)
?histogram
barchart(steps~date, data = ag)
?barchart
?barchart
barchart(steps~date, data = ag, xaxt='n')
barchart(steps~date, data = ag, xaxt='n', ann=FALSE)
barchart(steps~date, data = ag, xaxt='n', ann=FALSE)
barchart(steps~date, data = ag, axes = FALSE)
barchart(steps~date, data = ag, axes = FALSE, xaxt = "n")
ag <- aggregate(steps~date, activity, sum)
barchart(steps~date, data = ag, axes = FALSE, xaxt = "n")
?aggregate
tot <- aggregate(steps~date, activity, sum)
barchart(steps~date, data = tot)
?merge
mean <- aggregate(steps~date, activity, mean)
median <- aggregate(steps~date, activity, median)
head(mean)
head(median)
tail(median)
?median
median <- aggregate(steps~date, activity, median(na.rm = TRUE))
?mean
median <- aggregate(steps~date, activity, median)
median <- aggregate(steps~date, activity, median)
mean <- aggregate(steps~date, activity, mean)
rm(list=ls(all=TRUE))
activity <- read.csv(file = "activity.csv", header = TRUE)
tot <- aggregate(steps~date, activity, sum)
mean <- aggregate(steps~date, activity, mean)
median <- aggregate(steps~date, activity, median)
head(median)
tail(median)
summary(median)
summary(mean)
merge(mean, median)
?merge
merge(mean, median, by.x = date)
merge(mean, median, by.x = date, all.x = TRUE)
merge(mean, median, all.x = TRUE)
mean <- aggregate(steps~date, activity, mean)
rm(list=ls(all=TRUE))
activity <- read.csv(file = "activity.csv", header = TRUE)
mean <- aggregate(steps~date, activity, mean)
colnames(mean) <- c("date", "mean_steps")
head(mean)
median <- aggregate(steps~date, activity, median)
colnames(median) <- c("date", "median_steps")
head(median)
merge(mean, median, by.x = date, all.x = TRUE)
merge(mean, median, by.x = "date", all.x = TRUE)
merge(mean, median, by.x = "date")
library(plyr)
?table
table(mean$date, mean$mean_steps)
rm(list=ls(all=TRUE))
activity <- read.csv(file = "activity.csv", header = TRUE)
mean <- aggregate(steps~date, activity, mean)
colnames(mean) <- c("date", "mean_steps")
library(miscTools)
install.packages("miscTools")
library(miscTools)
median <- aggregate(steps~date, activity, colMedians)
?colMedians
median <- aggregate(steps~date, activity)
?aggregate
median <- aggregate(steps~date, activity, FUN = FALSE)
median <- aggregate(steps~date, activity, median, na.rm = TRUE)
colnames(median) <- c("date", "median_steps")
head(median)
rm(list=ls(all=TRUE))
activity <- read.csv(file = "activity.csv", header = TRUE)
summary(activity)
?plot
head(activity)
ts <- aggregate(steps~interval, activity, mean)
with(ts, plot(interval, steps, type = "l"))
rm(list=ls(all=TRUE))
activity <- read.csv(file = "activity.csv", header = TRUE)
ts <- aggregate(steps~interval, activity, mean)
with(ts, plot(interval, steps, type = "l"))
?plot
?max.col
which(ts$steps == max(ts$steps))
head(ts)
ts[104,2]
ts[104,1]
maxx <- which(ts$steps == max(ts$steps))
ts[maxx,1]
